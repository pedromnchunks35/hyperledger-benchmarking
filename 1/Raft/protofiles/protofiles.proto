syntax = "proto3";
package protofiles;
option go_package = "raft/protofiles";
service RaftSimple{
    rpc RequestVoteRPC(VoteRequest)returns(VoteConfirmation){}
    rpc AppendLogsRPC(AppendRequest)returns(AppendLogsConfirmation){}
    rpc HearthBeatRPC(HearthBeatRequest)returns(HearthBeatConfirmation){}
}
message VoteRequest{
    //? Temporal measurement in raft
    int32 term = 1;
    string id_candidate = 2;
    //? Last log index of the candidate
    int32 last_log_index = 3;
    //? Last term of the candidate
    int32 last_log_term = 4;
}
message VoteConfirmation{
    //? Receiver term (if the vote is denied and the term is high, we should update for this term and we dont get the vote)
    int32 term = 1;
    //? If the vote got granted or not
    bool vote_granted = 2;
}
message AppendRequest{
    //? Term of the leader that is trying to append the log
    int32 term = 1;
    string id_leader = 2;
    //? The log index of previous term we have before this that we are giving
    int32 prev_log_index = 3;
    //? Term of the previous log before this that we are giving
    int32 prev_log_term = 4;
    //? The new data
    Entries entries = 5;
    //? Leader current commit index
    int32 leader_commit = 6;
}
message AppendLogsConfirmation{
    //? The current term for the leader either update himself case it is high and he needs to step up as follower or to the leader know that the follower is wrong
    int32 term = 1;
    //? Check if the append got successfull or not
    bool success = 2;
}
//? entries are a list of logs that will be placed in a given index
message Entries{
    repeated Entrie entrie = 1;
}
//? single entrie
message Entrie{
    int32 index_of_log = 1;
    int32 term = 2;
    Log log = 3;
}
//? Log which represents some kind of instruction to run
message Log{
    string command = 1;
    repeated string args = 2;
}
//? HearthBeatRequest is just for the leader to send a hearthbeat
message HearthBeatRequest{
    int32 term = 1;
    string id_candidate  = 2;
}
//? The confirmation of it
message HearthBeatConfirmation{
    int32 term = 1;
    bool ok = 2;
}